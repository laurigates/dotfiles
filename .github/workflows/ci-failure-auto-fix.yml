name: Auto Fix CI Failures

on:
  workflow_run:
    workflows: ["Smoke Test CI"]  # ✅ Fixed: matches actual workflow name
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  actions: read
  issues: write
  # ✅ Fixed: removed unnecessary id-token: write permission

concurrency:  # ✅ Fixed: added concurrency control
  group: auto-fix-${{ github.event.workflow_run.pull_requests[0].number }}
  cancel-in-progress: false

jobs:
  auto-fix:
    if: |
      github.event.workflow_run.conclusion == 'failure' &&
      github.event.workflow_run.pull_requests[0] &&
      !startsWith(github.event.workflow_run.head_branch, 'claude-auto-fix-ci-')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup git identity
        run: |
          git config --global user.email "claude[bot]@users.noreply.github.com"
          git config --global user.name "claude[bot]"

      - name: Create fix branch
        id: branch
        run: |
          # ✅ Fixed: sanitize branch name to handle slashes
          SANITIZED_BRANCH="${{ github.event.workflow_run.head_branch }}"
          SANITIZED_BRANCH="${SANITIZED_BRANCH//\//-}"
          BRANCH_NAME="claude-auto-fix-ci-${SANITIZED_BRANCH}-${{ github.run_id }}"
          git checkout -b "$BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Get CI failure details
        id: failure_details
        continue-on-error: true  # ✅ Fixed: added error handling
        uses: actions/github-script@v7
        with:
          script: |
            const run = await github.rest.actions.getWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });

            const jobs = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.workflow_run.id }}
            });

            const failedJobs = jobs.data.jobs.filter(job => job.conclusion === 'failure');

            let errorLogs = [];
            for (const job of failedJobs) {
              try {
                const logs = await github.rest.actions.downloadJobLogsForWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  job_id: job.id
                });
                errorLogs.push({
                  jobName: job.name,
                  logs: logs.data
                });
              } catch (error) {
                console.log(`Failed to download logs for job ${job.name}: ${error.message}`);
              }
            }

            return {
              runUrl: run.data.html_url,
              failedJobs: failedJobs.map(j => j.name),
              errorLogs: errorLogs
            };

      - name: Fix CI failures with Claude
        id: claude
        if: steps.failure_details.outcome == 'success'  # ✅ Fixed: only run if logs downloaded
        uses: anthropics/claude-code-action@v1
        with:
          prompt: |
            The CI workflow has failed. Please analyze the error logs below and fix the issues.
            
            Failed CI Run: ${{ fromJSON(steps.failure_details.outputs.result).runUrl }}
            Failed Jobs: ${{ join(fromJSON(steps.failure_details.outputs.result).failedJobs, ', ') }}
            PR Number: ${{ github.event.workflow_run.pull_requests[0].number }}
            Branch Name: ${{ steps.branch.outputs.branch_name }}
            Base Branch: ${{ github.event.workflow_run.head_branch }}
            Repository: ${{ github.repository }}

            Error logs:
            ${{ toJSON(fromJSON(steps.failure_details.outputs.result).errorLogs) }}
            
            Please:
            1. Analyze the error logs to identify the root cause
            2. Make the necessary fixes to resolve the CI failures
            3. Ensure the fixes follow best practices and don't introduce new issues
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}  # ✅ Fixed: use correct secret
          claude_args: "--allowed-tools 'Edit,MultiEdit,Write,Read,Glob,Grep,LS,Bash(git:*),Bash(bun:*),Bash(npm:*),Bash(npx:*),Bash(gh:*)'"  # ✅ Fixed: use correct parameter syntax

      # ✅ Fixed: added steps to push branch and create PR
      - name: Push fix branch
        if: steps.claude.outcome == 'success' && steps.claude.outputs.changed == 'true'
        run: git push origin ${{ steps.branch.outputs.branch_name }}

      - name: Create PR
        if: steps.claude.outcome == 'success' && steps.claude.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --base ${{ github.event.workflow_run.head_branch }} \
            --head ${{ steps.branch.outputs.branch_name }} \
            --title "Auto-fix CI failures for PR #${{ github.event.workflow_run.pull_requests[0].number }}" \
            --body "Automated fixes for CI failures detected in ${{ fromJSON(steps.failure_details.outputs.result).runUrl }}
            
            This PR was automatically created by the CI auto-fix workflow.
            Please review the changes carefully before merging.
            
            Original PR: #${{ github.event.workflow_run.pull_requests[0].number }}
            Failed workflow: ${{ fromJSON(steps.failure_details.outputs.result).runUrl }}"
