# http://blog.askesis.pl/post/2017/04/how-to-debug-zsh-startup-time.html
# uncomment this and zprof at the end of this file to profile zsh startup
#zmodload zsh/zprof

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#emulate sh -c '. /etc/profile'

HISTFILE="$HOME/.zsh_history_dir/$(hostname -f)"
SAVEHIST=10000
HISTSIZE=50000
HIST_STAMPS="dd.mm.yyyy"

## History wrapper
# https://github.com/ohmyzsh/ohmyzsh/blob/master/lib/history.zsh
function omz_history {
  local clear list
  zparseopts -E c=clear l=list

  if [[ -n "$clear" ]]; then
    # if -c provided, clobber the history file
    echo -n >| "$HISTFILE"
    fc -p "$HISTFILE"
    echo >&2 History file deleted.
  elif [[ -n "$list" ]]; then
    # if -l provided, run as if calling `fc' directly
    builtin fc "$@"
  else
    # unless a number is provided, show all history events (starting from 1)
    [[ ${@[-1]-} = *[0-9]* ]] && builtin fc -l "$@" || builtin fc -l "$@" 1
  fi
}

# Timestamp format
case ${HIST_STAMPS-} in
  "mm/dd/yyyy") alias history='omz_history -f' ;;
  "dd.mm.yyyy") alias history='omz_history -E' ;;
  "yyyy-mm-dd") alias history='omz_history -i' ;;
  "") alias history='omz_history' ;;
  *) alias history="omz_history -t '$HIST_STAMPS'" ;;
esac

## History command configuration
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_dups       # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt share_history          # share command history data
setopt auto_cd                # change directories without cd
setopt complete_in_word
setopt always_to_end
setopt interactivecomments
setopt multios
setopt prompt_subst
setopt auto_menu
# setopt extendedglob

# https://grml.org/zsh/zsh-lovers.html
# Fuzzy matching of completions for when you mistype them:
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric
# cd will never select the parent directory (e.g.: cd ../<TAB>):
zstyle ':completion:*:cd:*' ignore-parents parent pwd

# fzf-tab related styles
# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# preview directory's content with exa when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'lsd --depth 1 --color always --tree $realpath'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'
# enable IP addresses in completions
zstyle ':completion:*' use-ip true

# Another method for quick change directories. Add this to your ~/.zshrc, then just enter “cd …./dir”
rationalise-dot() {
  if [[ $LBUFFER = *.. ]]; then
    LBUFFER+=/..
  else
    LBUFFER+=.
  fi
}
zle -N rationalise-dot
bindkey . rationalise-dot

source ~/dotfiles/zsh/aliases.zsh

###
# NOTE: Completions need to be loaded before compinit is run.
###

# nodenv completions
[ -f ~/.nodenv/completions/nodenv.zsh ] && source ~/.nodenv/completions/nodenv.zsh

# rbenv completions
[ -f ~/.rbenv/completions/rbenv.zsh ] && source ~/.rbenv/completions/rbenv.zsh

# Should check if fzf is installed?
# Has to be loaded after oh-my-zsh or Ctrl+T & Alt+C keybinds don't work among other things
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Load brew completions if it is installed
if type brew > /dev/null; then
    # Setup homebrew
    # completions for brew and applications installed by it
    # https://docs.brew.sh/Shell-Completion
    FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

autoload -Uz compinit
compinit

## Plugins to load after compinit
source ~/dotfiles/zsh/fzf-tab/fzf-tab.plugin.zsh
source ~/dotfiles/zsh/zsh-autosuggestions/zsh-autosuggestions.plugin.zsh
source ~/dotfiles/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh
source ~/dotfiles/zsh/zsh-z/zsh-z.plugin.zsh
# NOTE: fzf-tab needs to be loaded after compinit, but before plugins which
# will wrap widgets, such as zsh-autosuggestions or fast-syntax-highlighting!!
# Since oh-my-zsh runs compinit, the relevant thing here is that the plugins
# are in the correct order.
# plugins=(
#   git
#   systemd
#   nmap
#   terraform
# )

##### Fix tmux key mappings
# Fix Home/End keys
# bindkey "\e[1~" beginning-of-line
# bindkey "\e[4~" end-of-line

# Delete/Insert keys
# bindkey "\e[3~" delete-char
# bindkey "\e[2~" quoted-insert

# Mac binds
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

# Add a PC-like bind for pipe on macos
# command + < is similar to Alt Gr + <
bindkey -s "^[[60;9u" "|"

# mappings for "page up" and "page down" to step to the beginning/end
# of the history
# bindkey "\e[5~" beginning-of-history
# bindkey "\e[6~" end-of-history

# alternate mappings for "page up" and "page down" to search the history
# bindkey "\e[5~" history-search-backward
# bindkey "\e[6~" history-search-forward

# mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
# bindkey "\e[1;5C" forward-word
# bindkey "\e[1;5D" backward-word
# bindkey "\e[5C" forward-word
# bindkey "\e[5D" backward-word
# bindkey "\e\e[C" forward-word
# bindkey "\e\e[D" backward-word

# Completion for kitty
# The kitty docs specify that this has to be called after compinit
# compinit is called by oh-my-zsh, so this has to be after sourcing oh-my-zsh
# https://sw.kovidgoyal.net/kitty/index.html#configuring-kitty
if type kitty > /dev/null; then
    kitty + complete setup zsh | source /dev/stdin
fi

source ~/dotfiles/zsh/powerlevel10k/powerlevel10k.zsh-theme
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#zprof
