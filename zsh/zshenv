export PYENV_ROOT="$HOME/.pyenv"

export PATH=\
$PYENV_ROOT/shims:\
$PYENV_ROOT/bin:\
$HOME/.nodenv/shims:\
$HOME/.nodenv/bin:\
$HOME/.rbenv/shims:\
$HOME/.rbenv/bin:\
$HOME/.cargo/bin:\
$HOME/go/bin:\
$HOME/.local/bin:\
/usr/local/go/bin:\
/usr/local/sbin:\
/usr/local/bin:\
/usr/bin:\
/bin

if [ -x /usr/libexec/path_helper ]; then
	eval `/usr/libexec/path_helper -s`
fi

# Fix ruby installation on macos
# https://github.com/rbenv/ruby-build/issues/1409
if [[ $(uname) == 'Darwin' ]]; then
  # Setup Compiler paths for readline and openssl
  local READLINE_PATH=$(brew --prefix readline)
  local OPENSSL_PATH=$(brew --prefix openssl)
  export LDFLAGS="-L$READLINE_PATH/lib -L$OPENSSL_PATH/lib"
  export CPPFLAGS="-I$READLINE_PATH/include -I$OPENSSL_PATH/include"
  export PKG_CONFIG_PATH="$READLINE_PATH/lib/pkgconfig:$OPENSSL_PATH/lib/pkgconfig"
  
  # Use the OpenSSL from Homebrew instead of ruby-build
  # Note: the Homebrew version gets updated, the ruby-build version doesn't
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=$OPENSSL_PATH"
fi

# Define these to install perl modules without root
# For neovim perl module
# https://metacpan.org/pod/local::lib
PERL5LIB="/home/lgates/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/lgates/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/lgates/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/lgates/perl5"; export PERL_MM_OPT;

# Disable python keyring, so pip install won't pop open annoying dialogs
PYTHON_KEYRING_BACKEND="keyring.backends.null.Keyring"; export PYTHON_KEYRING_BACKEND;

# set terminal preference for i3
export TERMINAL=kitty

# set browser preference
export BROWSER=google-chrome-stable

# Nvim exists in my home folder in some environments.
# This will find it in my path and get the absolute path.
# The absolute path is required so that sudoedit will be able to
# find the executable, because my personal bin folder does not exist
# in the path of the root user.
NVIM=$(whence -p nvim)

if command -v nvim >/dev/null 2>&1; then
    export EDITOR='nvim'
    export VISUAL='nvim'
    export SUDO_EDITOR=$NVIM
else
    export EDITOR='vim'
    export VISUAL='vim'
    export SUDO_EDITOR='vim'
fi
# No need to source ruby or nvm here, because the zsh plugins already do that!

# Use fd by default, fallback to find
export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude '.git' || find . -type f"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Preview files with bat and directories with tree
export FZF_PREVIEW_COMMAND="bat --style=numbers,changes --wrap never --color always {} || cat {} || tree -C {}"
export FZF_CTRL_T_OPTS="--min-height 30 --preview-window down:60% --preview-window noborder --preview '($FZF_PREVIEW_COMMAND) 2> /dev/null'"

# Preview directory tree when using Alt+C
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

# Add the ability to copy reverse history search selection to the
# clipboard.
# Use xsel on Linux and pbcopy on macos.
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap --bind '?:toggle-preview' --bind 'ctrl-y:execute-silent(echo -n {2..} | (xsel -ib || pbcopy))+abort' --header 'Press CTRL-Y to copy command into clipboard'"

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

# for existing man pages
function fzf_apropos() {
  apropos '' | fzf --preview-window=up:50% --preview 'echo {} | cut -f 1 -d " " | xargs man' | cut -f 1 -d " "
}

# Install or upgrade nvim
function install_nvim () {
    if read -q "choice?Press Y/y to install neovim binaries to your home directory: "; then
        case "$(uname)" in
          'Darwin') OS=macos ;;
          'Linux') OS=linux64 ;;
        esac

        # Should add the option to choose whether to install globally
        INSTALL_DIR="$HOME/.local"
        if [[ -v OS ]]; then
          wget -qO- https://github.com/neovim/neovim/releases/download/nightly/nvim-$OS.tar.gz \
          | tar xzf - --strip-components=1 -C $INSTALL_DIR
        fi
    else
       echo "Skipping neovim installation."
    fi
}

# Fix SDL full screen output to correct monitor
export SDL_VIDEO_FULLSCREEN_HEAD=0

# vim:ft=sh
