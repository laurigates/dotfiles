# Remove duplicates from path
typeset -U PATH path
# https://stackoverflow.com/a/18077919
# > # append
# > path+=('/home/david/pear/bin')
# > # or prepend
# > path=('/home/david/pear/bin' $path)
# > # export to sub-processes (make it inherited by child processes)
# > export PATH
# https://gist.github.com/Linerre/f11ad4a6a934dcf01ee8415c9457e7b2
path+="$HOME/.local/bin"
path+="$HOME/.asdf/shims"

export PATH
# set terminal preference for i3
export TERMINAL=kitty
export BROWSER=google-chrome-stable

# Configure perl to install modules in the user directory so that root privileges are not required.
# The neovim perl module for example.
# https://metacpan.org/pod/local::lib
# https://neovim.io/doc/user/provider.html#provider-perl
#
# These commands to install neovim extension:
# cpan App::cpanminus
# cpan -m -n Neovim::Ext
# eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)"

# OS specific settings
case "$(uname)" in
'Darwin') export BROWSER="open -a Google\ Chrome" ;;
esac

# use most as pager for colored man pages
# export PAGER=most

# Nvim exists in my home folder in some environments.
# This will find it in my path and get the absolute path.
# The absolute path is required so that sudoedit will be able to
# find the executable, because my personal bin folder does not exist
# in the path of the root user.
NVIM=$(whence -p nvim)

if command -v nvim >/dev/null 2>&1; then
	export EDITOR='nvim'
	export VISUAL='nvim'
	export SUDO_EDITOR=$NVIM
else
	export EDITOR='vim'
	export VISUAL='vim'
	export SUDO_EDITOR='vim'
fi
# No need to source ruby or nvm here, because the zsh plugins already do that!

# Use fd by default, fallback to find
export FZF_DEFAULT_COMMAND="fd --type f --hidden --follow --exclude '.git' || find . -type f"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# Preview files with bat and directories with tree
export FZF_PREVIEW_COMMAND="bat --style=numbers,changes --wrap never --color always {} || cat {} || tree -C {}"
export FZF_CTRL_T_OPTS="--min-height 30 --preview-window down:60% --preview-window noborder --preview '($FZF_PREVIEW_COMMAND) 2> /dev/null'"

# Preview directory tree when using Alt+C
export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

# Add the ability to copy reverse history search selection to the
# clipboard.
# Use xsel on Linux and pbcopy on macos.
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden:wrap \
  --bind '?:toggle-preview' \
  --bind 'ctrl-y:execute-silent(echo -n {2..} \
  | (xsel -ib || pbcopy))+abort' \
  --color header:italic \
  --header 'Press CTRL-Y to copy command into clipboard'"

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  # print -lr -- "$1"/**(om)
	fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  # print -lr -- "$1"/**(omT/)
	fd --type d --hidden --follow --exclude ".git" . "$1"
}

# for existing man pages
function fzf_apropos() {
	apropos . | fzf --preview-window=up:50% --preview 'echo {} | cut -f 1 -d "(" | xargs man'
	# apropos '' | fzf --preview-window=up:50% --preview 'echo {} | cut -f 1 -d " " | xargs man' | cut -f 1 -d " "
}

# Install or upgrade nvim
function install_nvim () {
    # Use zsh builtin read function. When the -q option is used it returns
    # success when y/Y is pressed.
    if read -q "choice?Press Y/y to install neovim:"; then
      nvim_install_cmd
    else
      echo "Skipping neovim installation."
    fi
}

# Fix SDL full screen output to correct monitor
export SDL_VIDEO_FULLSCREEN_HEAD=0
# export DOCKER_DEFAULT_PLATFORM=linux/amd64

export MAKEFLAGS="-j$(sysctl -n hw.logicalcpu)"
export BAT_THEME=TwoDark

export OLLAMA_ORIGINS="app://obsidian.md*"
export PIPX_HOME="~/.local/pipx"
export HOMEBREW_BUNDLE_FILE="~/dotfiles/Brewfile"

source ~/.api_tokens
# vim:ft=sh
