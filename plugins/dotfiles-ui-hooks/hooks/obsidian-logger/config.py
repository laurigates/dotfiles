"""
Configuration for Obsidian Daily Logger
"""

import os
from pathlib import Path


class Config:
    """Configuration settings for the Obsidian logger."""

    # Vault settings
    VAULT_PATH = Path(os.getenv(
        "OBSIDIAN_VAULT_PATH",
        "/Users/lgates/Documents/FVH Vault"
    ))
    INBOX_PATH = VAULT_PATH / "Inbox"
    LOG_FILE = "DailyLog.md"

    # Full path to the log file
    LOG_FILE_PATH = INBOX_PATH / LOG_FILE

    # Gemini API settings
    GEMINI_MODEL = os.getenv("OBSIDIAN_LOGGER_MODEL", "gemini-2.5-flash")
    GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

    # Feature flags
    ENABLED = os.getenv("OBSIDIAN_LOGGER_ENABLED", "true").lower() == "true"
    USE_GEMINI = os.getenv("OBSIDIAN_LOGGER_USE_GEMINI", "true").lower() == "true"

    # Formatting
    DATE_FORMAT = "%Y-%m-%d %H:%M"

    # Activity emojis
    ACTIVITY_EMOJIS = {
        'created': '📝',
        'modified': '✏️',
        'fixed': '🔧',
        'analyzed': '🔍',
        'configured': '⚙️',
        'documented': '📚',
        'tests_passed': '✅',
        'tests_failed': '❌',
        'git_commit': '💾',
        'git_push': '🚀',
        'building': '📦',
        'linting': '🧹',
        'debugging': '🐛',
        'refactoring': '♻️',
        'installing': '📥',
        'error': '⚠️',
        'general': '💡'
    }

    @classmethod
    def ensure_log_file_exists(cls):
        """Ensure the log file and directory exist."""
        cls.INBOX_PATH.mkdir(parents=True, exist_ok=True)
        if not cls.LOG_FILE_PATH.exists():
            cls.LOG_FILE_PATH.write_text(
                "# Daily Activity Log\n\n"
                "This file is automatically generated by Claude Code.\n"
                "Activities are logged here for processing into daily notes.\n\n"
            )
