{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "env": {},
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr view:*)",
      "Bash(npm test:*)",
      "mcp__podio-mcp__list_notifications",
      "mcp__context7",
      "mcp__sequential-thinking",
      "mcp__graphiti-memory",
      "mcp__zen-mcp-server",
      "mcp__vectorcode"
    ],
    "deny": [
      "Bash(git add .)",
      "Bash(git add -A)",
      "Bash(git add --all)",
      "Edit(**/CHANGELOG.md)",
      "Write(**/CHANGELOG.md)",
      "MultiEdit(**/CHANGELOG.md)"
    ],
    "ask": [],
    "additionalDirectories": [
      "~/Documents/FVH Vault",
      "~/repos/infrastructure.wiki"
    ]
  },
  "mcpServers": {
    "context7": {
      "command": "bunx",
      "args": ["-y", "@upstash/context7-mcp"]
    },
    "github": {
      "command": "go",
      "args": [
        "run",
        "github.com/github/github-mcp-server/cmd/github-mcp-server@latest",
        "stdio"
      ]
    },
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"]
    },
    "playwright": {
      "command": "bunx",
      "args": ["-y", "@playwright/mcp@latest"]
    }
  },
{{- $settingsFile := joinPath .chezmoi.homeDir ".claude" "settings.json" }}
{{- if stat $settingsFile }}
{{- $existing := $settingsFile | include | fromJson }}
  "model": {{ if hasKey $existing "model" }}{{ $existing.model | toJson }}{{ else }}"sonnet"{{ end }},
  "feedbackSurveyState": {{ if hasKey $existing "feedbackSurveyState" }}{{ $existing.feedbackSurveyState | toJson }}{{ else }}{ "lastShownTime": 1754075292901 }{{ end }},
{{- else }}
  "model": "sonnet",
  "feedbackSurveyState": {
    "lastShownTime": 1754075292901
  },
{{- end }}
  "hooks": {
    "UserPromptSubmit": [
      {
        "hooks": [
{{- $hooks := list -}}
{{- $enable_sketchybar := true -}}
{{- $enable_obsidian := true -}}
{{- if hasKey . "claude_hooks" -}}
{{-   $enable_sketchybar = .claude_hooks.enable_sketchybar -}}
{{-   $enable_obsidian = .claude_hooks.enable_obsidian_logging -}}
{{- end -}}
{{- if $enable_sketchybar }}
{{-   $hooks = append $hooks (dict "type" "command" "command" "~/.local/share/claude/plugins/dotfiles-ui-hooks/hooks/sketchybar-trigger.sh" "timeout" 3000) -}}
{{- end }}
{{- if $enable_obsidian }}
{{-   $hooks = append $hooks (dict "type" "command" "command" "~/.local/share/claude/plugins/dotfiles-ui-hooks/hooks/obsidian-logger.sh" "timeout" 3000) -}}
{{- end }}
{{- range $i, $hook := $hooks }}
{{-   if $i }},{{ end }}
          {{ toJson $hook }}
{{- end }}
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Task|Read|Grep|Search|TodoWrite|mcp__graphiti-memory__search.*|WebFetch|WebSearch|Glob|LS",
        "hooks": []
      },
      {
        "matcher": "mcp__github__create_pull_request",
        "hooks": [
{{- if or (not (hasKey . "claude_hooks")) (and (hasKey . "claude_hooks") .claude_hooks.enable_gh_context) }}
          {
            "type": "command",
            "command": "gh repo view --json nameWithOwner --template 'github repository name with owner: {{ "{{" }}.nameWithOwner{{ "}}" }}'"
          }
{{- end }}
        ]
      },
      {
        "matcher": "Bash(git add*)",
        "hooks": [
{{- if or (not (hasKey . "claude_hooks")) (and (hasKey . "claude_hooks") .claude_hooks.enable_pre_commit_formatting) }}
          {
            "type": "command",
            "command": "~/.local/share/claude/plugins/dotfiles-ui-hooks/hooks/pre-commit-fix.sh",
            "timeout": 10000
          }
{{- end }}
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
{{- $stopHooks := list -}}
{{- $enable_sketchybar := true -}}
{{- $enable_voice := true -}}
{{- $enable_obsidian := true -}}
{{- if hasKey . "claude_hooks" -}}
{{-   $enable_sketchybar = .claude_hooks.enable_sketchybar -}}
{{-   $enable_voice = .claude_hooks.enable_voice_notifications -}}
{{-   $enable_obsidian = .claude_hooks.enable_obsidian_logging -}}
{{- end -}}
{{- if $enable_sketchybar }}
{{-   $stopHooks = append $stopHooks (dict "type" "command" "command" "~/.local/share/claude/plugins/dotfiles-ui-hooks/hooks/sketchybar-trigger.sh" "timeout" 3000) -}}
{{- end }}
{{- if $enable_voice }}
{{-   $stopHooks = append $stopHooks (dict "type" "command" "command" "~/.local/share/claude/plugins/dotfiles-ui-hooks/hooks/voice-notify.sh" "timeout" 5000) -}}
{{- end }}
{{- if $enable_obsidian }}
{{-   $stopHooks = append $stopHooks (dict "type" "command" "command" "~/.local/share/claude/plugins/dotfiles-ui-hooks/hooks/obsidian-log-complete.sh" "timeout" 5000) -}}
{{- end }}
{{- range $i, $hook := $stopHooks }}
{{-   if $i }},{{ end }}
          {{ toJson $hook }}
{{- end }}
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "bash ~/.local/share/claude/plugins/dotfiles-ui-hooks/scripts/statusline-command.sh"
  },
  "extraKnownMarketplaces": {
    "dotfiles": {
      "source": {
        "source": "directory",
        "path": "{{ .chezmoi.sourceDir }}/plugins"
      }
    }
  },
  "enabledPlugins": {
    "dotfiles-core@dotfiles": true,
    "dotfiles-utils@dotfiles": true,
    "dotfiles-ui-hooks@dotfiles": true,
    "dotfiles-experimental@dotfiles": true,
    "dotfiles-fvh@dotfiles": true
  }
}
