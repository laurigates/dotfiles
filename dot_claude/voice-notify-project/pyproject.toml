[project]
name = "claude-voice-notify"
version = "0.1.0"
description = "Claude Code Voice Notification System with Gemini API TTS and project-specific voices"
readme = "README.md"
authors = [
    { name = "Lauri Gates", email = "lauri.gates@forumvirium.fi" }
]
license = { text = "MIT" }
requires-python = ">=3.13"
keywords = ["claude", "voice", "notifications", "tts", "gemini"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "google-genai[aiohttp]",
]

[project.scripts]
voice-notify = "claude_voice_notify.notify:main"
voice-config = "claude_voice_notify.config:main"

[project.urls]
Homepage = "https://github.com/lgates/.claude-voice-notify"
Repository = "https://github.com/lgates/.claude-voice-notify.git"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.10",
    "types-requests>=2.32.4.20250809",
]

[tool.ruff]
target-version = "py313"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
    "TCH",  # flake8-type-checking
    "PTH",  # flake8-use-pathlib
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/**/*.py" = ["ARG", "S101"]  # allow assert statements in tests

[tool.ruff.lint.isort]
known-first-party = ["claude_voice_notify"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=30",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]
